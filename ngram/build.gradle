plugins {
    id 'application'
    id 'java'
}

group 'com.vaddya'
version '1.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_14
mainClassName = 'com.vaddya.ngram.NGram'

jar {
    manifest {
        attributes(
                'Main-Class': mainClassName
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

repositories {
    mavenCentral()
    maven {
        url 'http://mathpar.com/mvnrepo/'
    }
}

dependencies {
    implementation 'org.jetbrains:annotations:19.0.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.0'

    implementation 'org.apache.logging.log4j:log4j-api:2.13.2'
    implementation 'org.apache.logging.log4j:log4j-core:2.13.2'

    implementation files('lib/mpi.jar')
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
}

test {
    useJUnitPlatform()
}

def dummyOutputStream = new OutputStream() {
    @Override
    void write(int b) {}
}

task mpi(type: Exec, dependsOn: jar) {
    errorOutput = dummyOutputStream

    def files = []
    fileTree("data").visit { FileVisitDetails details ->
        files << details.file.path
    }
    println "Text files:\n${files.join("\n")}"

    def jarPath = jar.archiveFile.orNull.asFile.toString()
    def mult = MPI_MULT.toInteger()
    commandLine "mpirun", "-v", "-np", MPI_PROC, "--hostfile", "mpi.hostfile",
            "java", "-jar", jarPath, MPI_USE, MPI_NGRAM, (files * mult).join(",")
}
